-- MySQL Script generated by MySQL Workbench
-- Mon Sep  9 20:28:52 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

-- -----------------------------------------------------
-- Schema Banca_Provas
-- -----------------------------------------------------
DROP DATABASE `Banca_Provas`;
CREATE SCHEMA IF NOT EXISTS `Banca_Provas` DEFAULT CHARACTER SET utf8 ;
USE `Banca_Provas`; 

-- MySQL Script with ON DELETE CASCADE

-- -----------------------------------------------------
-- Table Banca_Provas.Candidato
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Banca_Provas.Candidato (
	CPF_Candidato VARCHAR(30) NOT NULL,
	Nome_Candidato VARCHAR(45) NOT NULL,
    -- adicinamos aqui
    Telefone VARCHAR(30) NOT NULL,
    Email VARCHAR(60) NOT NULL,
    -- adicinamos aqui
	Data_Nascimento DATE NOT NULL,
	Sexo Varchar(20) NOT NULL,
	CEP_Candidato VARCHAR(30) NOT NULL,
	UF VARCHAR(2) NOT NULL,
	Cidade VARCHAR (30) NOT NULL,
	Bairro VARCHAR (100) NOT NULL,
	Rua VARCHAR (100) NOT NULL,
    Complemento VARCHAR(200) NOT NULL,
	Numero INT NOT NULL,
	Estado_Civil VARCHAR(30) NOT NULL, 
    Foto_Candidato LONGBLOB NOT NULL,
    PRIMARY KEY (CPF_Candidato)
)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table Banca_Provas.Cargo
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Banca_Provas.Cargo (
  idCargo INT NOT NULL AUTO_INCREMENT,
  Nome_Cargo VARCHAR(45) NOT NULL,
  Salario DECIMAL(20, 2) NOT NULL,
  Descricao TEXT NOT NULL,
  PRIMARY KEY (idCargo) -- ,
    -- FOREIGN KEY (idConcurso)
    -- REFERENCES Banca_Provas.Concurso (idConcurso)
    )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table Banca_Provas.Orgao
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Banca_Provas.Orgao (
  Nome_Orgao VARCHAR(100) NOT NULL,
  CNPJ_Orgao VARCHAR(30) NOT NULL,
  Atuacao_Orgao VARCHAR(45) NULL,
  PRIMARY KEY (Nome_Orgao))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table Banca_Provas.Concurso
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Banca_Provas.Concurso (
  idConcurso INT NOT NULL,
  idCargo INT NOT NULL,
  Nome_Concurso VARCHAR(45) NOT NULL,
  Data_Concurso DATE NOT NULL,
  Orgao_Realizador VARCHAR(100) NOT NULL,
  PRIMARY KEY (idConcurso),
  FOREIGN KEY (Orgao_Realizador)
    REFERENCES Banca_Provas.Orgao (Nome_Orgao)
    ON DELETE CASCADE  -- Se o órgão realizador for deletado, o concurso será deletado.
)
ENGINE = InnoDB;

-- Adicionar chave estrangeira na tabela Cargo que faz referência à tabela Concurso
-- ALTER TABLE Banca_Provas.Cargo
-- ADD
-- FOREIGN KEY (idConcurso)
-- REFERENCES Banca_Provas.Concurso (idConcurso)
-- ON DELETE CASCADE;  -- Se o concurso for deletado, os cargos relacionados também serão deletados.

-- Adicionar chave estrangeira na tabela Concurso que faz referência à tabela Cargo
ALTER TABLE Banca_Provas.Concurso
ADD 
FOREIGN KEY (idCargo)
REFERENCES Banca_Provas.Cargo (idCargo)
ON DELETE CASCADE;  -- Se o cargo for deletado, o concurso relacionado também será deletado.


-- -----------------------------------------------------
-- Table Banca_Provas.Inscricao
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Banca_Provas.Inscricao (
  CPF_Candidato VARCHAR(30) NOT NULL,
  idConcurso INT NOT NULL,
  idCargo INT NOT NULL,
  Data_Inscricao DATE NOT NULL,
  Cota VARCHAR(45) NOT NULL,
  PRIMARY KEY (Data_Inscricao, idConcurso, idCargo, CPF_Candidato),
  FOREIGN KEY (CPF_Candidato)
    REFERENCES Banca_Provas.Candidato (CPF_Candidato)
    ON DELETE CASCADE,  -- Se o candidato for deletado, suas inscrições serão deletadas.
  FOREIGN KEY (idConcurso)
    REFERENCES Banca_Provas.Concurso (idConcurso)
    ON DELETE CASCADE,  -- Se o concurso for deletado, as inscrições serão deletadas.
  FOREIGN KEY (idCargo)
    REFERENCES Banca_Provas.Cargo (idCargo)
    ON DELETE CASCADE,  -- Se o cargo for deletado, as inscrições relacionadas serão deletadas.
  INDEX idx_CPF_Candidato_idConcurso (CPF_Candidato, idConcurso)
)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table Banca_Provas.Instituicao_Aplicadora
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Banca_Provas.Instituicao_Aplicadora (
  CNPJ VARCHAR(30) NOT NULL,
  CEP VARCHAR(30) NOT NULL,
  Razao_Social VARCHAR(45) NOT NULL,
  Num_Salas INT NOT NULL,
  Num_Banheiros INT NOT NULL NOT NULL,
  PRIMARY KEY (CNPJ, CEP),
  INDEX idx_CNPJ_CEP (CNPJ, CEP)  -- Composite index for CNPJ and CEP
)
ENGINE = InnoDB;



-- -----------------------------------------------------
-- Table Banca_Provas.Aplicacao
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Banca_Provas.Aplicacao (
  CNPJ_Instituicao VARCHAR(30) NOT NULL,
  CEP VARCHAR(30) NOT NULL,
  idConcurso INT NOT NULL,
  Total_Fiscais INT NOT NULL,
  Data_Aplicacao DATE NOT NULL,
  PRIMARY KEY (CNPJ_Instituicao, CEP, idConcurso),
  FOREIGN KEY (idConcurso)
    REFERENCES Banca_Provas.Concurso (idConcurso)
    ON DELETE CASCADE,  -- Se o concurso for deletado, a aplicação também será deletada.
  FOREIGN KEY (CNPJ_Instituicao, CEP)  
    REFERENCES Banca_Provas.Instituicao_Aplicadora (CNPJ, CEP)
    ON DELETE CASCADE,  -- Se a instituição aplicadora for deletada, as aplicações serão deletadas.
  INDEX idx_CNPJ_Instituicao_CEP (CNPJ_Instituicao, CEP)  -- Add this index
)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table Banca_Provas.Familiares
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Banca_Provas.Familiares (
  CPF_Candidato VARCHAR(30) NOT NULL,
  CPF_Familiar VARCHAR(30) NOT NULL,
  Nome VARCHAR(45) NOT NULL,
  Data_Nascimento DATE NOT NULL,
  Sexo VARCHAR(20) NOT NULL,
  PRIMARY KEY (CPF_Candidato, CPF_Familiar),
  FOREIGN KEY (CPF_Candidato)
		REFERENCES Banca_Provas.Candidato (CPF_Candidato)
		ON DELETE CASCADE  -- Se o candidato for deletado, os familiares associados também serão deletados.
)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table Banca_Provas.Fiscal
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Banca_Provas.Fiscal (
  CPF VARCHAR(30) NOT NULL,
  Nome VARCHAR(45) NOT NULL,
  Sexo VARCHAR(20) NOT NULL,
  Data_Nascimento DATE NOT NULL,
  PRIMARY KEY (CPF))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table Banca_Provas.Resultado
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Banca_Provas.Resultado (
  nResultado INT NOT NULL,
  CPF_Candidato VARCHAR(30) NOT NULL,
  idConcurso INT NOT NULL,
  idCargo INT NOT NULL,
  Data_Inscricao DATE NOT NULL,
  Nota INT NOT NULL,
  Colocacao INT NOT NULL,
  Data_Convocao DATE NULL,
  FOREIGN KEY (Data_Inscricao, idConcurso, idCargo, CPF_Candidato)
    REFERENCES Banca_Provas.Inscricao (Data_Inscricao, idConcurso, idCargo, CPF_Candidato)
    ON DELETE CASCADE  -- Se a inscrição for deletada, o resultado relacionado será deletado.
)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table Banca_Provas.Fiscal_Aplicacao
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Banca_Provas.Fiscal_Aplicacao (
  CPF_Fiscal VARCHAR(30) NOT NULL,
  CNPJ_Inst VARCHAR(30) NOT NULL,
  CEP VARCHAR(30) NOT NULL,
  idConcurso INT NOT NULL,  -- Include idConcurso
  PRIMARY KEY (CPF_Fiscal, CNPJ_Inst, CEP, idConcurso),  -- Add idConcurso to the primary key
    FOREIGN KEY (CNPJ_Inst, CEP, idConcurso)  -- Reference all three columns
    REFERENCES Banca_Provas.Aplicacao (CNPJ_Instituicao, CEP, idConcurso)
    ON DELETE CASCADE,  -- Se a aplicação for deletada, o fiscal associado também será deletado.
    FOREIGN KEY (CPF_FISCAL)
    REFERENCES Banca_Provas.Fiscal (CPF)
    ON DELETE CASCADE  -- Se o fiscal for deletado, o vínculo de aplicação também será deletado.
)
ENGINE = InnoDB;